{"version":3,"file":"autocomplete-suggestions.js","sourceRoot":"","sources":["../../src/autocomplete-suggestions.ts"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,OAAO,uBAAuB;IAQhC,YACI,mBAAwE;QAP5E,mBAAc,GAAG,CAAC,CAAC;QACnB,aAAQ,GAAG,CAAC,CAAC;QACb,mBAAc,GAA6B,EAAE,CAAC;QAO1C,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;IACpD,CAAC;IAED,SAAS;QACL,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC;IAEK,kBAAkB,CAAC,IAAY;;YACjC,IAAI,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAC7D,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAC1D,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACxC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;aACrC;iBAAM;gBACH,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aAC5B;QACL,CAAC;KAAA;CAEJ","sourcesContent":["import { AutoCompleteSuggestion } from './models/autocomplete-suggestion';\n\nexport class AutoCompleteSuggestions {\n\n    maxSuggestions = 5;\n    minInput = 0;\n    suggestionData: AutoCompleteSuggestion[] = [];\n\n    private _suggestionGenerator: (text: string) => Promise<AutoCompleteSuggestion[]>;\n\n    constructor(\n        suggestionGenerator: (text: string) => Promise<AutoCompleteSuggestion[]>\n    ) {\n        this._suggestionGenerator = suggestionGenerator;\n    }\n\n    clearData(): void {\n        this.suggestionData = [];\n    }\n\n    async prepareSuggestions(text: string): Promise<void> {\n        if (this._suggestionGenerator && (text.length >= this.minInput)) {\n            const suggestions = await this._suggestionGenerator(text);\n            suggestions.splice(this.maxSuggestions);\n            this.suggestionData = suggestions;\n        } else {\n            this.suggestionData = [];\n        }\n    }\n\n}\n"]}