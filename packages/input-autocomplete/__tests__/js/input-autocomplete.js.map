{"version":3,"file":"input-autocomplete.js","sourceRoot":"","sources":["../../src/input-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport { css } from 'lit-element/lib/css-tag';\nimport { customElement } from 'lit-element/lib/decorators';\nimport { PropertyValues } from 'lit-element/lib/updating-element';\n\nimport { AutoCompleteSuggestion } from './models/autocomplete-suggestion';\n\nimport { InputAutoCompleteBase } from './input-autocomplete-base';\n\nconst CUSTOM_ELEMENT_NAME = 'rx-input-autocomplete';\n\n@customElement(CUSTOM_ELEMENT_NAME)\nexport class InputAutoComplete extends InputAutoCompleteBase {\n    static customElementName = CUSTOM_ELEMENT_NAME;\n\n    suggestionsContainer: HTMLUListElement | null = null;\n\n    static get styles() {\n        return css`\n            div > ul {\n                list-style: none;\n                margin: 0;\n                padding: 0;\n            }\n\n            div > ul > li > button {\n                border: none;\n                cursor: pointer;\n            }\n        `;\n    }\n\n    firstUpdated(changedProperties: PropertyValues) {\n        super.firstUpdated(changedProperties);\n        this.setSuggestionsContainer();\n    }\n\n    render(): TemplateResult {\n\n        const cssSuggestionAlignmentBlock = html`\n            <style>\n                :host div > ul > li > button {\n                    text-align: ${this.cssSuggestionAlignment};\n                }\n            </style>\n        `;\n\n        const cssWidthStyleBlock = html`\n            <style>\n                :host div {\n                    width: ${this.cssWidth};\n                }\n\n                :host div > input,\n                :host div > ul,\n                :host div > ul > li,\n                :host div > ul > li > button {\n                    width: 100%;\n                }\n            </style>`;\n\n        return html`\n        <div .class=${this.cssClasses.wrapper}>\n            <input\n                autocomplete=\"off\"\n                type=\"text\"\n\n                ?disabled=\"${this.disabled}\"\n                ?required=\"${this.required}\"\n\n                .class=\"${this.cssClasses.input}\"\n                .id=\"${this.inputId}\"\n                .inputMode=\"${this.inputMode}\"\n                .placeholder=\"${this.placeholder}\"\n                .value=\"${this.text}\"\n\n                @blur=\"${this.handleBlur}\"\n                @focus=\"${this.handleFocus}\"\n                @keydown=\"${this.handleKeyDown}\"\n                @keyup=\"${this.handleKeyUp}\"\n\n                />\n\n            <ul class=\"${this.cssClasses.suggestions}\">\n                ${this._autoCompleteSuggestions\n                ?.suggestionData.map((suggestion, index) =>\n                    this.renderSuggestion(suggestion, index))}\n            </ul>\n        </div>\n\n        ${this.cssWidth ? cssWidthStyleBlock : html``}\n        ${this.cssSuggestionAlignment ? cssSuggestionAlignmentBlock : html``}\n        `;\n    }\n\n    renderSuggestion(suggestion: AutoCompleteSuggestion, index: number): TemplateResult {\n        return html`\n        <li>\n            <button\n                type=\"button\"\n\n                .class=\"${this.getSuggestionsCssClasses(index)}\"\n                .data-value=\"${suggestion.value}\"\n\n                @click=\"${() => this.handleSuggestionClick(index)}\"\n                >\n                ${suggestion.suggestion ? suggestion.suggestion : suggestion.text}\n            </button>\n        </li>`;\n    }\n\n    setSuggestionsContainer(): void {\n        const collection = this.shadowRoot?.children;\n\n        if (!collection) {\n            console.error(`The expected \\`${HTMLCollection.name}\\` is not here.`);\n            return;\n        }\n\n        const div = Array.from(collection)\n            .find(i => i.tagName.toLowerCase() === 'div') as HTMLDivElement;\n\n        if (!div) {\n            console.error(`The expected \\`${HTMLDivElement.name}\\` is not here.`);\n            return;\n        }\n\n        this.suggestionsContainer = Array.from(div.children)\n            .find(i => i.tagName.toLowerCase() === 'ul') as HTMLUListElement;\n\n        if (!this.suggestionsContainer) {\n            console.error(`The expected \\`${HTMLUListElement.name}\\` is not here.`);\n            return;\n        }\n    }\n\n    handleSuggestionSelection(suggestionIndex: number): void {\n        if (!this.suggestionsContainer) {\n            return;\n        }\n\n        const className = 'selected';\n\n        Array\n            .from(this.suggestionsContainer.children)\n            .forEach((li, index) => {\n                if (li.classList.contains(className)) {\n                    li.classList.remove(className);\n                }\n\n                if (suggestionIndex === index) {\n                    li.classList.add(className);\n                }\n            });\n    }\n}\n"]}