{"version":3,"file":"input-autocomplete.spec.js","sourceRoot":"","sources":["../../src/input-autocomplete.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { InputAutoComplete } from './input-autocomplete';\n\nclass DOMTestingUtility {\n    static async getDocumentNode(selector: string): Promise<Node> {\n        return new Promise(resolve => {\n            function requestComponent() {\n                const element = document.querySelector(selector);\n                if (element) {\n                    resolve(element);\n                } else {\n                    window.requestAnimationFrame(requestComponent);\n                }\n            }\n            requestComponent();\n        });\n    }\n}\n\ndescribe(InputAutoComplete.name, function () {\n    let customElement: InputAutoComplete;\n    let shadowRoot: ShadowRoot;\n    let divElement: HTMLDivElement;\n    let inputElement: HTMLInputElement;\n\n    before(async function () {\n        const node = await DOMTestingUtility.getDocumentNode('#web-component-container');\n\n        const container = node as HTMLDivElement;\n        chai.expect(container).to.be.instanceOf(HTMLDivElement);\n        chai.expect(container.children).to.be.instanceOf(HTMLCollection);\n        chai.expect(container.children.length).to.be.eq(1);\n\n        customElement = container.children[0] as InputAutoComplete;\n    });\n\n    it('is rendered', function () {\n        chai.expect(customElement).to.be.instanceOf(InputAutoComplete);\n        chai.expect(customElement.localName).to.be.eq(InputAutoComplete.customElementName);\n\n        customElement.suggestionGenerator = (text: string) => Promise.resolve([\n            { text: 'one', value: '01' },\n            { text: 'two', value: '02' },\n            { text: 'three', value: '03' },\n            { text: 'four', value: '05' },\n            { text: 'five', value: '05' },\n            { text: 'fifty-one', value: '51' },\n            { text: 'fifty-two', value: '52' },\n            { text: 'fifty-three', value: '53' },\n            { text: 'fifty-four', value: '54' },\n            { text: 'fifty-five', value: '55' },\n        ].filter(i => {\n            return i.text.startsWith(text);\n        }));\n    });\n\n    it('has a `shadowRoot`', function () {\n        shadowRoot = customElement.shadowRoot as ShadowRoot;\n        chai.expect(shadowRoot).to.be.instanceOf(ShadowRoot);\n    });\n\n    it('has a `shadowRoot` with container, input element and suggestions element', function () {\n        chai.expect(shadowRoot.children).to.be.instanceOf(HTMLCollection);\n        chai.expect(shadowRoot.children.length).to.be.eq(1);\n\n        divElement = shadowRoot.children[0] as HTMLDivElement;\n        chai.expect(divElement).to.be.instanceOf(HTMLDivElement);\n        chai.expect(divElement.children.length).to.be.eq(2);\n\n        inputElement = divElement.children[0] as HTMLInputElement;\n        chai.expect(inputElement).to.be.instanceOf(HTMLInputElement);\n    });\n\n    it('has an `input` element with expected default properties/attributes', function () {\n        chai.expect(inputElement.disabled).eq(false);\n        chai.expect(inputElement.required).eq(true);\n\n        chai.expect(inputElement.id).eq(customElement.inputId);\n        chai.expect(inputElement.inputMode).eq(customElement.inputMode);\n        chai.expect(inputElement.placeholder).eq(customElement.placeholder);\n    });\n});\n"]}