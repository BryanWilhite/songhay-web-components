{"version":3,"file":"input-autocomplete.js","sourceRoot":"","sources":["../src/input-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    customElement,\n    html,\n    LitElement,\n    property,\n    TemplateResult\n} from 'lit-element';\n\nimport Timeout from 'await-timeout';\n\nimport {\n    KEY_DOWN,\n    KEY_ESCAPE,\n    KEY_TAB,\n    KEY_RETURN,\n    KEY_UP\n} from 'keycode-js';\n\nimport { AutoCompleteSuggestion } from './models/autocomplete-suggestion';\nimport { InputModes } from './types/input-modes';\nimport { AutoCompleteCssClasses } from './models/autocomplete-css-classes';\n\nconst CUSTOM_EVENT_NAME_SELECTED = 'selected';\nconst CUSTOM_EVENT_NAME_UNSELECTED = 'unselected';\n\n@customElement('rx-input-autocomplete')\nexport class InputAutoComplete extends LitElement {\n\n    active = false;\n    activeIndex = -1;\n    data: AutoCompleteSuggestion[] = [];\n\n    @property({ type: Boolean }) disabled = false;\n    @property({ type: Boolean }) required = true;\n\n    @property({ type: Number }) maxSuggestions = 5;\n    @property({ type: Number }) minInput = 0;\n\n    @property({ type: Object }) cssClasses = new AutoCompleteCssClasses();\n    @property({ type: Object }) inputMode: InputModes = 'none';\n\n    @property({ type: String }) inputId = '';\n    @property({ type: String }) placeholder = '';\n    @property({ type: String }) text = '';\n    @property({ type: String }) value = '';\n\n    @property({ type: Object }) suggestionGenerator: (text: string) => Promise<AutoCompleteSuggestion[]> = () => Promise.resolve([]);\n\n    clearData(): void {\n        this.data = [];\n        this.activeIndex = -1;\n        this.active = false;\n    }\n\n    clearSelection(clearOnlyValue = false): void {\n        if (this.value !== '') {\n            this.dispatchEvent(\n                new CustomEvent(\n                    CUSTOM_EVENT_NAME_UNSELECTED,\n                    {\n                        detail: {\n                            text: this.text,\n                            value: this.value\n                        }\n                    })\n            );\n            this.value = '';\n        }\n        if (!clearOnlyValue) {\n            this.text = '';\n        }\n    }\n\n    getSuggestionsCssClasses(index: number): string {\n        return `${this.cssClasses.suggestion}${(this.activeIndex === index) ? ' ' + this.cssClasses.active : ''}`;\n    }\n\n    handleActivation(next = true): void {\n        if (!this.data.length) {\n            return;\n        }\n\n        if (next && (this.activeIndex + 1) < this.data.length) {\n            this.activeIndex += 1;\n        } else if (next) {\n            this.activeIndex = 0;\n        } else if (!next && (this.activeIndex) > 0) {\n            this.activeIndex -= 1;\n        } else if (!next) {\n            this.activeIndex = this.data.length - 1;\n        }\n    }\n\n    handleBlur(e: FocusEvent): void {\n        e.preventDefault();\n\n        const timer = new Timeout();\n        timer\n            .set(250)\n            .then(() => {\n\n                if (!this.active) {\n                    return;\n                }\n\n                if (this.value) {\n                    this.clearData();\n                } else {\n                    this.handleClose();\n                }\n\n            });\n    }\n\n    handleClose(): void {\n        this.clearSelection();\n        this.clearData();\n    }\n\n    handleFocus(e: FocusEvent): void {\n        e.preventDefault();\n        this.active = true;\n    }\n\n    handleKeyDown(e: KeyboardEvent): void {\n        if (!e) {\n            console.error('The expected KeyboardEvent is not here.');\n            return;\n        }\n\n        const keyCode = e.keyCode;\n        switch (keyCode) {\n            case KEY_DOWN:\n            case KEY_UP:\n                e.preventDefault();\n                this.handleActivation(keyCode === 40);\n                break;\n\n            case KEY_RETURN:\n            case KEY_TAB:\n                e.preventDefault();\n                this.handleSelection(this.activeIndex);\n                break;\n\n            case KEY_ESCAPE:\n                this.handleClose();\n                break;\n        }\n    }\n\n    handleKeyUp(e: KeyboardEvent): void {\n        if (!e) {\n            console.error('The expected KeyboardEvent is not here.');\n            return;\n        }\n\n        if (!e.target) {\n            console.error('The expected KeyboardEvent EventTarget is not here.');\n            return;\n        }\n\n        const text: string = e.target['value'];\n\n        switch (e.keyCode) {\n            case KEY_DOWN:\n            case KEY_UP:\n            case KEY_RETURN:\n            case KEY_TAB:\n            case KEY_ESCAPE:\n                this.clearSelection(true);\n                this.prepareSuggestions(text);\n                break;\n        }\n\n        this.active = true;\n        this.text = text;\n    }\n\n    handleSelection(index: number): void {\n        if (index >= 0 && index < this.data.length) {\n            this.text = this.data[index].text;\n            this.value = this.data[index].value;\n            this.dispatchEvent(\n                new CustomEvent(\n                    CUSTOM_EVENT_NAME_SELECTED,\n                    { detail: this.data[index] })\n            );\n            this.clearData();\n        }\n    }\n\n    hasData(): boolean {\n        return this.data && this.data.length > 0;\n    }\n\n    async prepareSuggestions(text: string): Promise<void> {\n        if (this.suggestionGenerator && text.length >= this.minInput) {\n            const suggestions = await this.suggestionGenerator(text);\n            suggestions.splice(this.maxSuggestions);\n            this.data = suggestions;\n        } else {\n            this.data = [];\n        }\n    }\n\n    render(): TemplateResult {\n        return html`\n        <div .class=${this.cssClasses.wrapper}>\n            <input\n                @blur=\"${this.handleBlur}\"\n                @focus=\"${this.handleFocus}\"\n                @keyDown=\"${this.handleKeyDown}\"\n                @keyUp=\"${this.handleKeyUp}\"\n\n                ?disabled=\"${this.disabled}\"\n\n                .class=\"${this.cssClasses.input}\"\n                .id=\"${this.inputId}\"\n                .inputMode=\"${this.inputMode}\"\n                .placeholder=\"${this.placeholder}\"\n                .required=\"${this.required}\"\n                .value=\"${this.text}\"\n\n                autocomplete=\"off\"\n                type=\"text\"\n\n                />\n\n            ${this.hasData() ? this.renderSuggestions() : ''}\n        </div>`;\n    }\n\n    renderSuggestion(suggestion: AutoCompleteSuggestion, index: number) {\n        return html`\n        <button\n            @click=\"${() => this.handleSelection(index)}\"\n\n            .class=\"${this.getSuggestionsCssClasses(index)}\"\n            .data-value=\"${suggestion.value}\"\n\n            type=\"button\">\n            ${suggestion.suggestion ? suggestion.suggestion : suggestion.text}\n        </button>`;\n    }\n\n    renderSuggestions(): TemplateResult {\n        return html`\n        <div class=\"${this.cssClasses.suggestions}\">\n            ${this.data.map((suggestion, index) => this.renderSuggestion(suggestion, index))}\n        </div>`;\n    }\n}\n"]}