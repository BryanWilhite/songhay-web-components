{"version":3,"file":"autocomplete-suggestions.spec.js","sourceRoot":"","sources":["../../src/services/autocomplete-suggestions.spec.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAE9B,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AAErE,MAAM,mBAAmB,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;IAC1D,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;IAC5B,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE;IAC5B,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;IAC9B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;IAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;IAC7B,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE;IAClC,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE;IAClC,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE;IACpC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE;IACnC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE;CACtC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAExC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,EAAE;IACnC,MAAM,WAAW,GAAG,IAAI,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;IAErE,EAAE,CAAC,gBAAgB,EAAE;QACjB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE;;YAC1B,MAAM,KAAK,GAAG,GAAG,CAAC;YAElB,MAAM,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAE5C,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,cAAc,EAAC,CAAC,CAAC;YAEzD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;KAAA,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;;YAC3B,MAAM,KAAK,GAAG,GAAG,CAAC;YAElB,MAAM,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAE5C,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,cAAc,EAAC,CAAC,CAAC;YAEzD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;KAAA,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE;;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC;YAEnB,MAAM,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAE5C,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,cAAc,EAAC,CAAC,CAAC;YAEzD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;KAAA,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE;;YAC5B,MAAM,KAAK,GAAG,GAAG,CAAC;YAElB,MAAM,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAE5C,OAAO,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,cAAc,EAAC,CAAC,CAAC;YAEzD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;KAAA,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\n\nimport { AutoCompleteSuggestions } from './autocomplete-suggestions';\n\nconst suggestionGenerator = (text: string) => Promise.resolve([\n    { text: 'one', value: '01' },\n    { text: 'two', value: '02' },\n    { text: 'three', value: '03' },\n    { text: 'four', value: '05' },\n    { text: 'five', value: '05' },\n    { text: 'fifty-one', value: '51' },\n    { text: 'fifty-two', value: '52' },\n    { text: 'fifty-three', value: '53' },\n    { text: 'fifty-four', value: '54' },\n    { text: 'fifty-five', value: '55' },\n].filter(i => i.text.startsWith(text)));\n\ndescribe(AutoCompleteSuggestions.name, function () {\n    const suggestions = new AutoCompleteSuggestions(suggestionGenerator);\n\n    it('is constructed', function () {\n        expect(suggestions).is.instanceOf(AutoCompleteSuggestions);\n    });\n\n    it('prepares one suggestion', async function() {\n        const input = 'o';\n\n        await suggestions.prepareSuggestions(input);\n\n        console.log({input, output: suggestions.suggestionData});\n\n        expect(suggestions).to.have.property('suggestionData').with.lengthOf(1);\n    });\n\n    it('prepares two suggestions', async function() {\n        const input = 't';\n\n        await suggestions.prepareSuggestions(input);\n\n        console.log({input, output: suggestions.suggestionData});\n\n        expect(suggestions).to.have.property('suggestionData').with.lengthOf(2);\n    });\n\n    it('prepares five suggestions', async function() {\n        const input = 'fi';\n\n        await suggestions.prepareSuggestions(input);\n\n        console.log({input, output: suggestions.suggestionData});\n\n        expect(suggestions).to.have.property('suggestionData').with.lengthOf(5);\n    });\n\n    it('prepares zero suggestions', async function() {\n        const input = 'z';\n\n        await suggestions.prepareSuggestions(input);\n\n        console.log({input, output: suggestions.suggestionData});\n\n        expect(suggestions).to.have.property('suggestionData').with.lengthOf(0);\n    });\n});\n"]}